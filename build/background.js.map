{"version":3,"file":"background.js","sources":["../static/background.js"],"sourcesContent":["// empty for now, this is the bridge between the browser and our dev tools application\n// console.log('background.js is running');\n\n// chrome.runtime.onInstalled.addListener((details) => {\n//   console.log('details: ', details);\n// });\n\n// chrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n//   console.log(msg, sender, sendResponse);\n//   sendResponse('im from the background script');\n//   chrome.tabs.sendMessage(sender.tab.id, 'got your message from background!');\n// });\n\nchrome.runtime.onMessage.addListener('readScripts', (details) => {\n  console.log('logging details from readScript message: ', details);\n});\n\nconsole.log('background script running');\n\nchrome.scripting.registerContentScripts([\n  {\n    id: 'inpage',\n    matches: ['http://*/*', 'https://*/*'],\n    js: ['contentScript.js'],\n    runAt: 'document_start',\n    world: 'MAIN',\n  },\n]);\n\n// chrome.scripting\n//   .registerContentScripts([\n//     {\n//       id: \"session-script\",\n//       js: [\"contentScript.js\"],\n//       persistAcrossSessions: false,\n//       matches: [\"*://www.google.com/*\"],\n//       runAt: \"document_start\",\n//       world: \"MAIN\", // this fails\n//     },\n//   ])\n//   .then(() => console.log(\"registration complete\"))\n//   .catch((err) => console.warn(\"unexpected error\", err));\n\n\n\n// chrome.scripting.registerContentScripts([\n//   {\n//     id: 'XMLOverride',\n//     js: ['src/content/XMLOverride.js'],\n//     matches: ['https://*.example.com/*'],\n//     runAt: 'document_start',\n//     world: 'MAIN',\n//   },\n// ]);\n\n\n// chrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {\n//   chrome.tabs.executeScript(tabs[0].id, { file: 'contentScript.js' });\n// });\n\n\n// chrome.action.onClicked.addListener(async (tab) => {\n//   try {\n//     await chrome.scripting.executeScript({\n//       target: { tabId: tab.id },\n//       files: ['contentScript.js'],\n//     });\n//   } catch (err) {\n//     console.error('Failed to inject content script:', err);\n//   }\n// });\n\n// chrome.action.onClicked.addListener(async (tab) => {\n//   try {\n//     await chrome.scripting.executeScript({\n//       target: { tabId: tab.id },\n//       files: ['contentScript.js'],\n//     });\n\n//     await chrome.scripting.executeScript({\n//       target: { tabId: tab.id },\n//       world: 'MAIN',\n//       func: executeInMainWorld,\n//     });\n//   } catch (err) {\n//     console.error('Failed to inject content script:', err);\n//   }\n// });"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,OAAO,KAAK;AACjE,EAAE,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,OAAO,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH;AACA,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AACzC;AACA,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC;AACxC,EAAE;AACF,IAAI,EAAE,EAAE,QAAQ;AAChB,IAAI,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;AAC1C,IAAI,EAAE,EAAE,CAAC,kBAAkB,CAAC;AAC5B,IAAI,KAAK,EAAE,gBAAgB;AAC3B,IAAI,KAAK,EAAE,MAAM;AACjB,GAAG;AACH,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}